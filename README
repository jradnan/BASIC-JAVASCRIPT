১ >>> পূর্ণ সংখ্যা : parseInt যেমন : 1,2,3
ভগ্নাংশ অথবা পূর্ণ সংখ্যা নয় যেমন : 1.34, 776.90, 99.99

Javascript e parseFloat() string কে nonestring করে দেয়   আর parsInt() কোন সংখ্যার ১.৩ পরের সংখ্যা কে সমান করে দেয় 
১.৩ হলে ১ করে দেয়


যেমন : 
var eggPrice = "3.66";
var applePrice = "4.99";
var totall = eggPrice +applePrice;

var egg = parseFloat(eggPrice);
var apple = parseFloat(applePrice);
var allPrice = egg +apple;

২ >>> কোনটা কি ধরনের ডাটা টাইপ এইটা বুঝাতে typeof use করতে হয় |
যেমন :
var tShirtPrice = 200;
var applePrice = '200';
var isRining = true;

console.log(typeof tShirtPrice);
console.log(typeof applePrice);
console.log(typeof isRining);


৩ >>> মডুলাস মানে ভাগশেষ।  % চিন্হ দিয়ে ভাগশেষ করতে হয়।  
যেমন : 
var food = 123;
var hungryPerson = 10;
var totalPerson = food % hungryPerson;
console.log(totalPerson);


৪ >>> কোনটা সত্য কোনটা মিথ্যা বুঝাতে Boolean (True/False) 
যেমন : 
var isRining = true;
var heIsGoing = false;
console.log(isRining);
console.log(heIsGoing);

৫ >>> array ব্যবহার করতে [] লিখে ব্যবহার করতে হয় |
অনেক গুলো উপাদান (Element) লিখতে array ব্যবহৃত হয় 
যেমন :

var food = ['apple', 'bananas', 'orange', 'mango',   ];
console.log(food);
console.log(food.length);

কোনটার মধ্যে কততম বা এর মধ্যে কি আছে বুঝাতে array এর 
indexof ব্যবহৃত হয়
যেমন :
var fruit = ['apple', 'banana', 'pineapple', 'mango', 'jackfruit'];
var fruitCount = fruit.indexOf('mango')

কততম এর মধ্যে কি আছে সেটা বুঝতে ওই উপাদান (Elements) এর সাথে 
উপাদান[] লিখে ব্যবহার করতে হয় 

যেমন :

var fruitIndex = fruit[4];

console.log(fruitIndex);


কোনো উপাদান (Elements) এর মান পরিবর্তন করতে হলে 
যেমন :
var number = [22, 33, 45, 210, 190, 321, 330];

number[4] = 99;
console.log(number);

উপাদান এর ভিতর কিছু ঢুকাতে গেলে array.push() ব্যবহৃত হয়
যেমন :
var number = [22, 33, 45, 210, 190, 321, 330];
number.push(87)
console.log(number);

উপাদান এর ভিতর থেকে বের করতে গেলে arra.pop() ব্যবহৃত হয়
যেমন :
number.pop()
console.log(number);



৬ >>


আজকের সেকেন্ড টপিক হচ্ছে-- শর্ত। বা কন্ডিশন। শর্ত সত্য না মিথ্যা সেটা চেক করবে আজকে। সেখানে দেখতে পারবে মোটামুটি ছয়ভাবে শর্ত চেক করা যায়। সেগুলা হচ্ছে-- >, <, ==, !=, <=, >= ব্যস। এইগুলাই। 

< এইটা দিয়ে চেক করবে বাম পাশে যেটা আছে সেটা ডানপাশেরটা থেকে ছোট কিনা 

> এইটা দিয়ে চেক করবে বাম পাশে যেটা আছে সেটা ডানপাশেরটা থেকে বড় কিনা 

== এইটা দিয়ে চেক করবে বাম পাশেরটা আর ডানপাশেরটা দুইটাই সমান কিনা

!= এইটা দিয়ে চেক করবে বাম পাশেরটা আর ডানপাশেরটা দুইটাই অসমান (ডিফারেন্ট বা আলাদা) কিনা

<= এইটা দিয়ে চেক করবে বাম পাশে যেটা আছে সেটা ডানপাশেরটা থেকে ছোট বা সমান কিনা 

>= এইটা দিয়ে চেক করবে বাম পাশে যেটা আছে সেটা ডানপাশেরটা থেকে বড় বা সমান কিনা 

 

দুইটা শর্তের মাঝখানে:

&& থাকার মানে দুইটা শর্তই পূরণ করতে হবে। একটা করবে আরেকটা করবে না। তাহলে হবে না। 

।। থাকার মানে দুইটা শর্তেরযেকোন একটা পূরণ করলেই হবে। তবে দুইটাই না করলে হবে না। 

If else এর ক্ষেত্রে এভাবে লিখতে হয় 
 if (condition) {
    
 } else {
    
 }

যদি শর্ত পূরণ হয় তাহলে প্রথম টি তে যাবে আর যদি না হয় পরের টি তে যাবে
যেমন :
var samsungTablet = 230000;
var myBudget = 10000;
 if(myBudget > samsungTablet){
    console.log('I will Buy');
 }else{
    console.log('I will not buy');
 }

অধিক শর্ত হলে এভাবে লিখতে হয় 
যেমন :
var cook = 25;
var noodles = 30;
var halim = 60;
var birani = 120;
var myBudget = 25; 

if(myBudget > birani){
    console.log('birani khabo');
}else if(myBudget > halim){
    console.log('halim khabo');
}else if(myBudget >= cook){
    console.log('cook khabo');
}
else{
    console.log('muri khao');
}


৭ >> যদি একই মান বার বার বাড়াতে হয় তখন while loop ব্যবহার করতে হয় 
যেমন :
var beton = 0;

while(beton<9){
    console.log('Sir, please amr ei month er beton den');
    beton++;
}
 

 এখান এ while loop এর ভিতরে আগে যেই variable (var beton = 0) 
 ডিক্লেয়ার করা হয়েছে তার মান বাড়ানোর জন্য while loop এর ভিতরে 
 আবার ডিক্লেয়ার করে তার মান এক এক করে বাড়ানো হয়েছে (beton++)
